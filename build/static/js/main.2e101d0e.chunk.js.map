{"version":3,"sources":["firebase/firebase-config.js","helper/getUsuarioStorage.js","types/types.js","actions/ui.js","pages/Ingresar.js","pages/Cola.js","pages/CrearTicket.js","pages/Escritorio.js","helper/loadItems.js","actions/item.js","helper/loadProjects.js","actions/proyecto.js","context/EditableContext.js","components/table/EditableCell.js","components/table/EditableRow.js","components/table/EditableTable.js","pages/Presupuesto.js","components/modal/ModalAdd.js","components/modal/ModalEdit.js","pages/Proyecto.js","actions/auth.js","router/RouterPage.js","pages/auth/LoginPage.js","pages/auth/RegisterPage.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/presupuestoReducer.js","reducers/proyectoReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","TicketApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","getUsuarioStorage","agente","localStorage","getItem","escritorio","types","hideMenu","type","closeModal","closeModalEdit","finishLoading","startLoadingTable","finishLoadingTable","Title","Typography","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Ingresar","dispatch","useDispatch","useEffect","history","useHistory","useState","usuario","to","level","name","initialValues","remember","onFinish","setItem","push","onFinishFailed","errorInfo","console","log","Item","label","rules","required","message","min","max","htmlType","shape","SaveOutlined","data","ticketNo","Cola","dataSource","slice","renderItem","item","style","width","marginTop","actions","color","align","Meta","title","description","CrearTicket","icon","DownloadOutlined","size","onClick","fontSize","Escritorio","clear","CloseCircleOutlined","ArrowRightOutlined","loadItems","uid","id","a","collection","get","itemSnap","items","forEach","key","addNew","payload","startLoadingItems","getState","activeProject","proyecto","total","undefined","length","quantity","unityPrice","setItems","setTotal","editItem","deleteItem","cleanItems","loadProjects","projectSnap","projects","project","setProjects","AddNewProject","deleteProject","editProject","setActiveProject","EditableContext","React","createContext","EditableCell","editable","children","numeric","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","useRef","form","useContext","current","focus","toggleEdit","setFieldsValue","save","validateFields","values","childNode","margin","ref","onPressEnter","onBlur","className","paddingRight","EditableRow","index","props","Form","useForm","component","Provider","value","EditableTable","useSelector","state","presupuesto","loadingTable","ui","useParams","setData","newTotal","handleDelete","doc","delete","startDeleting","components","body","row","cell","update","startEditing","columns","render","_","onConfirm","backgroundColor","DeleteOutlined","map","col","onCell","rowClassName","scroll","y","loading","Presupuesto","presupuestoInicial","setPresupuestoInicial","setPresupuesto","percent","setPercent","projectActive","startSetActiveProject","toFixed","PlusOutlined","newItem","add","strokeColor","showInfo","ModalAdd","modalOpen","handleAdd","newProject","startAddNewProject","visible","onOk","onCancel","destroyOnClose","footer","ModalEdit","modalEditOpen","startEditingProject","Proyecto","handleEdit","startDeleteProject","itemLayout","content","DollarCircleFilled","EditFilled","DeleteFilled","active","valueStyle","suffix","login","startLoginWithEmailAndPassword","email","password","signInWithEmailAndPassword","then","user","displayName","catch","e","Swal","fire","logOut","Sider","Layout","Content","Menu","RouterPage","menuOpen","height","collapsedWidth","breakpoint","hidden","theme","mode","defaultSelectedKeys","ProfileOutlined","UserOutlined","VideoCameraOutlined","UploadOutlined","padding","onBack","goBack","extra","signOut","LogoutOutlined","minHeight","overflow","exact","path","LoginPage","justify","bordered","textAlign","marginRight","borderRadius","Password","block","md","lg","signInWithPopup","userGoogle","GoogleOutlined","pull","RegisterPage","createUserWithEmailAndPassword","updateProfile","startRegisterUser","getFieldValue","validator","rule","Promise","reject","resolve","pul","AuthRouter","PrivateRoute","isLoggedIn","Component","rest","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","initialState","rootReducer","combineReducers","action","filter","p","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","TicketApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2e101d0e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC7uz7iJkkOxgtNy9cOdVdVKN4kkZ07NGQ\",\r\n    authDomain: \"budget-calculator-react.firebaseapp.com\",\r\n    projectId: \"budget-calculator-react\",\r\n    storageBucket: \"budget-calculator-react.appspot.com\",\r\n    messagingSenderId: \"378571334997\",\r\n    appId: \"1:378571334997:web:9e5f3129f2ed71a081bbdc\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const getUsuarioStorage = () => {\r\n    return {\r\n        agente: localStorage.getItem('agente') || null,\r\n        escritorio: localStorage.getItem('escritorio') || null\r\n    }\r\n}","\r\n\r\nexport const types = {\r\n\r\n    authLogin: '[auth] Login',\r\n    authLogout: '[auth] Logout',\r\n\r\n    startLoading: '[ui] Start Loading Button',\r\n    finishLoading: '[ui] Finish Loading Button',\r\n    uiShowMenu: '[ui] Show Sidebar',\r\n    uiHideMenu: '[ui] Hide Sidebar',\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n    uiOpenModalEdit: '[ui] Open Modal Edit',\r\n    uiCloseModalEdit: '[ui] Close Modal Edit',\r\n    uiStartLoadingTable: '[ui] Start Loading Table',\r\n    uiFinishLoadingTable: '[ui] Finish Loading Table',\r\n\r\n    itemLoad: '[item] Load Items',\r\n    itemAdd: '[item] Add Item',\r\n    itemLoadTotal: '[item] Total price items',\r\n    itemEditItem: '[item]  Edit Item',\r\n    itemDelete: '[item]  Delete Item',\r\n    itemClean: '[item]  Clean Items',\r\n\r\n    proyectoLoad: '[proyecto] Load projects',\r\n    setActiveProject: '[proyecto] set Active Project',\r\n    proyectoAdd: '[proyecto] Add projects',\r\n    proyectoEdit: '[proyecto]  Edit projects',\r\n    proyectoDelete: '[proyecto]  Delete projects',\r\n    proyectoCleanLogOut: '[proyecto]  Clean LogOut',\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const showMenu = () => ({ type: types.uiShowMenu });\r\nexport const hideMenu = () => ({ type: types.uiHideMenu });\r\n\r\nexport const openModal = () => ({ type: types.uiOpenModal });\r\nexport const closeModal = () => ({ type: types.uiCloseModal });\r\n\r\nexport const openModalEdit = () => ({ type: types.uiOpenModalEdit });\r\nexport const closeModalEdit = () => ({ type: types.uiCloseModalEdit });\r\n\r\nexport const startLoading = () => ({ type: types.startLoading });\r\nexport const finishLoading = () => ({ type: types.finishLoading });\r\n\r\nexport const startLoadingTable = () => ({ type: types.uiStartLoadingTable });\r\nexport const finishLoadingTable = () => ({ type: types.uiFinishLoadingTable });","import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, InputNumber, Typography, Divider } from 'antd';\r\nimport { SaveOutlined } from '@ant-design/icons'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n// import { useHideMenu } from '../hooks/useHideMenu';\r\nimport { getUsuarioStorage } from '../helper/getUsuarioStorage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showMenu } from '../actions/ui';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 14 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 14 },\r\n};\r\nexport const Ingresar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(showMenu());\r\n    }, [dispatch]);\r\n\r\n\r\n    const history = useHistory();\r\n    const [usuario] = useState(getUsuarioStorage());\r\n\r\n\r\n    const onFinish = ({ agente, escritorio }) => {\r\n        // console.log('Success:',);\r\n        localStorage.setItem('agente', agente);\r\n        localStorage.setItem('escritorio', escritorio);\r\n        history.push('/escritorio');\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    // useHideMenu(false);\r\n\r\n    if (usuario.agente && usuario.escritorio) {\r\n        return <Redirect to=\"/escritorio\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title level={2}> Ingresar</Title>\r\n            <Text>\r\n                Ingrese su nombre y numero de escritorio\r\n            </Text>\r\n            <Divider />\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"Nombre del Agente\"\r\n                    name=\"agente\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese su nombre!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Escritorio\"\r\n                    name=\"escritorio\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese su escritorio!' }]}\r\n                >\r\n                    <InputNumber min={1} max={99} />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        shape=\"round\"\r\n                    >\r\n                        <SaveOutlined />Ingresar\r\n        </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Col, Row, Typography, List, Card, Tag, Divider } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideMenu } from '../actions/ui';\r\n// import { useHideMenu } from '../hooks/useHideMenu';\r\nconst { Title, Text } = Typography;\r\nconst data = [\r\n    {\r\n        ticketNo: 33,\r\n        escritorio: 3,\r\n        agente: 'Fernando Herrera'\r\n    },\r\n    {\r\n        ticketNo: 34,\r\n        escritorio: 4,\r\n        agente: 'Melissa Flores'\r\n    },\r\n    {\r\n        ticketNo: 35,\r\n        escritorio: 5,\r\n        agente: 'Carlos Castro'\r\n    },\r\n    {\r\n        ticketNo: 36,\r\n        escritorio: 3,\r\n        agente: 'Fernando Herrera'\r\n    },\r\n    {\r\n        ticketNo: 37,\r\n        escritorio: 3,\r\n        agente: 'Fernando Herrera'\r\n    },\r\n    {\r\n        ticketNo: 38,\r\n        escritorio: 2,\r\n        agente: 'Melissa Flores'\r\n    },\r\n    {\r\n        ticketNo: 39,\r\n        escritorio: 5,\r\n        agente: 'Carlos Castro'\r\n    },\r\n];\r\nexport const Cola = () => {\r\n    // useHideMenu(true);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(hideMenu())\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <Title level={2}>\r\n                Atendiendo al cliente:\r\n            </Title>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <List\r\n                        dataSource={data.slice(0, 3)}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <Card\r\n                                    style={{ width: 300, marginTop: 16 }}\r\n                                    actions={[\r\n                                        <Tag color=\"volcano\">{item.agente} </Tag>,\r\n                                        <Tag color=\"magenta\">Escritorio {item.escritorio} </Tag>,\r\n                                    ]}\r\n                                >\r\n                                    <Title level={2} align=\" center\"> No. {item.ticketNo}</Title>\r\n                                </Card>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Divider>Historial</Divider>\r\n                    <List\r\n                        dataSource={data.slice(0, 3)}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    title={`Ticker No. ${item.ticketNo}`}\r\n                                    description={\r\n                                        <>\r\n                                            <Text type=\"secondary\" > En el escritorio: </Text>\r\n                                            <Tag color=\"magenta\">{item.ticketNo}</Tag>\r\n                                            <Text type=\"secondary\" > Agente: </Text>\r\n                                            <Tag color=\"volcano\">{item.agente}</Tag>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Col, Row, Typography } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons'\r\n// import { useHideMenu } from '../hooks/useHideMenu';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideMenu } from '../actions/ui';\r\n\r\nconst { Title, Text } = Typography;\r\nexport const CrearTicket = () => {\r\n\r\n    // useHideMenu(true);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(hideMenu());\r\n    }, [dispatch]);\r\n\r\n    const nuevoTicket = () => {\r\n        console.log('Nuevo Ticket');\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={14} offset={6} align=\"center\">\r\n                    <Title level={3}>\r\n                        Presione el boton para  un nuevo ticket\r\n                    </Title>\r\n\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        icon={<DownloadOutlined />}\r\n                        size=\"large\"\r\n                        onClick={nuevoTicket}\r\n                    >\r\n                        Nuevo Ticket\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: '90px' }}>\r\n                <Col\r\n                    span={14}\r\n                    offset={6}\r\n                    align=\"center\"\r\n                >\r\n                    <Text level={2}>\r\n                        Su numero:\r\n                    </Text>\r\n                    <br />\r\n                    <Text type=\"success\" style={{ fontSize: '55px   ' }}>\r\n                        5\r\n                    </Text>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Col, Divider, Row, Typography } from 'antd';\r\nimport { ArrowRightOutlined, CloseCircleOutlined } from '@ant-design/icons'\r\nimport { getUsuarioStorage } from '../helper/getUsuarioStorage';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst { Title, Text } = Typography;\r\nexport const Escritorio = () => {\r\n    const history = useHistory();\r\n\r\n    const salir = () => {\r\n        localStorage.clear();\r\n        history.push('/ingresar');\r\n    }\r\n    const siguienteTicket = () => {\r\n        console.log('Siguiente Ticket');\r\n    }\r\n    const [usuario] = useState(getUsuarioStorage());\r\n\r\n    if (!usuario.agente && !usuario.escritorio) {\r\n        return <Redirect to=\"/ingresar\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={20}>\r\n                    <Title level={2}>{usuario.agente}</Title>\r\n                    <Text>Usted esta trabajando en el escritorio: </Text>\r\n                    <Text type=\"success\"> {usuario.escritorio}</Text>\r\n                </Col>\r\n\r\n                <Col span={4} align=\"right\" >\r\n                    <Button\r\n                        type=\"danger\"\r\n                        shape=\"round\"\r\n                        onClick={salir}\r\n                    >\r\n                        <CloseCircleOutlined />\r\n                        Salir\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider />\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Text>Esta Atendiendo el ticket numero: </Text>\r\n                    <Text\r\n                        style={{ fontSize: 30 }}\r\n                        type=\"danger\"\r\n                    >\r\n                        55\r\n                    </Text>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col offset={18} span={6} align=\"right\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        onClick={siguienteTicket}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                        Siguiente\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadItems = async (uid, id) => {\r\n\r\n    const itemSnap = await db.collection(`${uid}/Esctritorio/proyectos/${id}/items`).get();\r\n    const items = [];\r\n\r\n    itemSnap.forEach(item => {\r\n        items.push({\r\n            key: item.id,\r\n            ...item.data()\r\n        })\r\n    });\r\n\r\n    return items;\r\n}","import { types } from \"../types/types\";\r\nimport { loadItems } from \"../helper/loadItems\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { finishLoadingTable, startLoadingTable } from \"./ui\";\r\n\r\n\r\n\r\n\r\nexport const startAddingItem = (id) => {\r\n\r\n\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { activeProject } = getState().proyecto;\r\n        const { uid } = getState().auth;\r\n        const newItem = {\r\n            item: 'Item',\r\n            quantity: 0,\r\n            unityPrice: 0,\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/Esctritorio/proyectos/${activeProject.id}/items`).add(newItem);\r\n\r\n        // dispatch(startEditingProject(project.id, project));\r\n\r\n        dispatch(addNew(doc.id, newItem));\r\n    }\r\n}\r\n\r\nconst addNew = (id, item) => ({\r\n    type: types.itemAdd,\r\n    payload: {\r\n        key: id,\r\n        ...item\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingItems = (id) => {\r\n\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const { activeProject } = getState().proyecto;\r\n        dispatch(startLoadingTable());\r\n        const data = await loadItems(uid, activeProject.id);\r\n        dispatch(finishLoadingTable());\r\n\r\n        let total = 0;\r\n        if (data !== undefined || data.length > 0) {\r\n            data.forEach(item => {\r\n                total += (item.quantity * item.unityPrice);\r\n            });\r\n        }\r\n\r\n        dispatch(setItems(data));\r\n        dispatch(setTotal(total));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const startEditing = (id, item) => {\r\n\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const { activeProject } = getState().proyecto;\r\n\r\n        await db.doc(`${uid}/Esctritorio/proyectos/${activeProject.id}/items/${id}`).update(item);\r\n\r\n        dispatch(editItem(item));\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst editItem = (item) => ({\r\n    type: types.itemEditItem,\r\n    payload: { ...item }\r\n});\r\n\r\n\r\nexport const startDeleting = (id) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const { activeProject } = getState().proyecto;\r\n\r\n        await db.doc(`${uid}/Esctritorio/proyectos/${activeProject.id}/items/${id}`).delete();\r\n\r\n        dispatch(deleteItem(id));\r\n    }\r\n\r\n\r\n}\r\n\r\nconst deleteItem = (item) => ({\r\n    type: types.itemDelete,\r\n    payload: item\r\n})\r\n\r\n\r\nconst setItems = (items) => ({\r\n    type: types.itemLoad,\r\n    payload: items\r\n})\r\n\r\nexport const setTotal = (total) => ({\r\n    type: types.itemLoadTotal,\r\n    payload: total\r\n})\r\n\r\nexport const cleanItems = () => ({ type: types.itemClean });","import { db } from '../firebase/firebase-config';\r\n\r\n\r\n\r\nexport const loadProjects = async (uid) => {\r\n    const projectSnap = await db.collection(`${uid}/Esctritorio/proyectos`).get();\r\n    const projects = [];\r\n\r\n    projectSnap.forEach(project => {\r\n        projects.push({\r\n            id: project.id,\r\n            ...project.data()\r\n        });\r\n    });\r\n\r\n    return projects;\r\n}","import { types } from '../types/types';\r\nimport { db } from '../firebase/firebase-config';\r\nimport { loadProjects } from '../helper/loadProjects';\r\nimport { finishLoadingTable, startLoadingTable } from './ui';\r\n\r\nexport const startLoadingProjects = () => {\r\n\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        dispatch(startLoadingTable());\r\n        const projects = await loadProjects(uid);\r\n        dispatch(finishLoadingTable());\r\n        dispatch(setProjects(projects));\r\n    }\r\n}\r\n\r\nconst setProjects = (projects) => ({\r\n    type: types.proyectoLoad,\r\n    payload: projects\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const startAddNewProject = (title, presupuestoInicial) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newProject = {\r\n            title,\r\n            presupuestoInicial,\r\n            total: 0\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/Esctritorio/proyectos`).add(newProject)\r\n\r\n        dispatch(AddNewProject(doc.id, newProject))\r\n    }\r\n\r\n}\r\n\r\nconst AddNewProject = (id, project) => ({\r\n    type: types.proyectoAdd,\r\n    payload: {\r\n        id,\r\n        ...project\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const startDeleteProject = (id) => {\r\n\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        await db.doc(`${uid}/Esctritorio/proyectos/${id}`).delete();\r\n        dispatch(deleteProject(id));\r\n    }\r\n}\r\n\r\nconst deleteProject = (id) => ({\r\n    type: types.proyectoDelete,\r\n    payload: id\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  NO funciona >:( \r\nexport const startEditingProject = (id, project) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        await db.doc(`${uid}/Esctritorio/proyectos/${id}`).update(project);\r\n        dispatch(editProject(id, project));\r\n    }\r\n\r\n}\r\n\r\n\r\nconst editProject = (id, project) => ({\r\n    type: types.proyectoEdit,\r\n    payload: {\r\n        id,\r\n        project: {\r\n            id,\r\n            ...project\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const startSetActiveProject = (id) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const project = await db.doc(`${uid}/Esctritorio/proyectos/${id}`).get();\r\n        const projectActive = {\r\n            id: project.id,\r\n            ...project.data()\r\n        }\r\n        dispatch(setActiveProject(project.id, projectActive));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setActiveProject = (id, project) => ({\r\n    type: types.setActiveProject,\r\n    payload: {\r\n        id,\r\n        ...project\r\n    }\r\n});\r\n\r\nexport const cleanLogout = () => ({ type: types.proyectoCleanLogOut });","import React from 'react';\r\nexport const EditableContext = React.createContext(null);","import { Form, Input, InputNumber } from 'antd';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { EditableContext } from '../../context/EditableContext';\r\n\r\nexport const EditableCell = ({\r\n    title,\r\n    editable,\r\n    children,\r\n    numeric,\r\n    dataIndex,\r\n    record,\r\n    handleSave,\r\n    ...restProps\r\n}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            (numeric)\r\n                ? (\r\n                    <Form.Item\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                        name={dataIndex}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                type: 'number',\r\n                                min: 1,\r\n                                message: `${title} debe ser un numero mayor a 0.`,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <InputNumber ref={inputRef} onPressEnter={save} onBlur={save} />\r\n                    </Form.Item>\r\n                ) : (\r\n                    <Form.Item\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                        name={dataIndex}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: `${title} es obligatorio.`,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n                    </Form.Item>)\r\n        ) : (\r\n                <div\r\n                    className=\"editable-cell-value-wrap\"\r\n                    style={{\r\n                        paddingRight: 24,\r\n                    }}\r\n                    onClick={toggleEdit}\r\n                >\r\n                    {children}\r\n                </div>\r\n            );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};","import React from 'react';\r\nimport { Form } from 'antd';\r\nimport { EditableContext } from '../../context/EditableContext';\r\n\r\n\r\nexport const EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { Button, Popconfirm, Table } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EditableCell } from './EditableCell';\r\nimport { EditableRow } from './EditableRow';\r\nimport { startEditing, setTotal, startDeleting, startLoadingItems } from '../../actions/item';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport const EditableTable = () => {\r\n\r\n    const { items } = useSelector(state => state.presupuesto);\r\n    const { loadingTable } = useSelector(state => state.ui);\r\n    const { projects } = useSelector(state => state.proyecto);\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const [data, setData] = useState(items);\r\n    // Efecto\r\n    useEffect(() => {\r\n        if (projects.length >= 1) {\r\n            dispatch(startLoadingItems(id));\r\n        }\r\n    }, [dispatch, id, projects]);\r\n\r\n    useEffect(() => {\r\n        setData(items);\r\n    }, [items])\r\n\r\n    useEffect(() => {\r\n\r\n        let newTotal = 0;\r\n        items.forEach(item => {\r\n            newTotal += (item.quantity * item.unityPrice)\r\n        });\r\n        dispatch(setTotal(newTotal));\r\n\r\n    }, [items, dispatch])\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n    // Elementos de la tabla\r\n    const components = {\r\n        body: {\r\n            row: EditableRow,\r\n            cell: EditableCell,\r\n        }\r\n    }\r\n    const initColumns = [\r\n        {\r\n            title: 'Item',\r\n            dataIndex: 'item',\r\n            width: '30%',\r\n            numeric: false,\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Cantidad',\r\n            dataIndex: 'quantity',\r\n            numeric: true,\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Precio x Unidad',\r\n            dataIndex: 'unityPrice',\r\n            numeric: true,\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'total',\r\n            render: (_, record) => (\r\n                <>\r\n                    {record.quantity * record.unityPrice}\r\n                </>\r\n            )\r\n        }\r\n        ,\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'Action',\r\n            render: (_, record) =>\r\n                <Popconfirm title=\"Seguro que desea Eliminar?\" onConfirm={() => handleDelete(record.key)}>\r\n                    <Button\r\n                        shape=\"circle\"\r\n                        type=\"danger\"\r\n                        style={{ backgroundColor: '#CA2637' }}\r\n                        icon={<DeleteOutlined />}\r\n                    ></Button>\r\n                </Popconfirm>\r\n        },\r\n    ];\r\n    const handleSave = (row) => {\r\n        dispatch(startEditing(row.key, row));\r\n    }\r\n\r\n    const columns = initColumns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                editable: col.editable,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                numeric: col.numeric,\r\n                handleSave: handleSave,\r\n            })\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Table\r\n            dataSource={data}\r\n            rowClassName={() => 'editable-row'}\r\n            components={components}\r\n            columns={columns}\r\n            scroll={{ y: 370 }}\r\n            loading={loadingTable}\r\n        >\r\n\r\n        </Table>\r\n    )\r\n}\r\n","import { PlusOutlined } from '@ant-design/icons';\r\nimport { Col, Divider, Row, Typography, Button, Progress } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { startAddingItem } from '../actions/item';\r\nimport { startSetActiveProject } from '../actions/proyecto';\r\nimport { hideMenu } from '../actions/ui';\r\nimport { EditableTable } from '../components/table/EditableTable';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\n\r\nexport const Presupuesto = () => {\r\n\r\n    const { total } = useSelector(state => state.presupuesto);\r\n    const { activeProject } = useSelector(state => state.proyecto);\r\n    const { id } = useParams();\r\n    const [presupuestoInicial, setPresupuestoInicial] = useState(activeProject.presupuestoInicial)\r\n    const [presupuesto, setPresupuesto] = useState(total);\r\n    const dispatch = useDispatch();\r\n\r\n    const [percent, setPercent] = useState(0);\r\n\r\n    // Efecto\r\n    useEffect(() => {\r\n        setPresupuesto(total);\r\n    }, [total]);\r\n\r\n    useEffect(() => {\r\n        setPresupuestoInicial(activeProject.presupuestoInicial)\r\n    }, [activeProject]);\r\n\r\n    useEffect(() => {\r\n        dispatch(hideMenu());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(startSetActiveProject(id));\r\n    }, [dispatch, id]);\r\n\r\n    useEffect(() => {\r\n        // console.log(activeProject.presupuestoInicial);\r\n        const percentCalculated = (total * 100) / presupuestoInicial\r\n        setPercent(percentCalculated.toFixed(2));\r\n\r\n    }, [activeProject, total, presupuestoInicial]);\r\n    // Funcionalidad \r\n\r\n    const handleAdd = () => {\r\n        dispatch(startAddingItem(id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={18}>\r\n                    <Title>\r\n                        Presupuesto( {activeProject.title})\r\n                    </Title>\r\n                    <Text > Presupuesto Estimado: </Text>\r\n                    <Text type=\"success\"  >L{presupuestoInicial}  </Text>\r\n                    <br />\r\n                    <Text > Presupuesto Actual: </Text>\r\n                    <Text type={(presupuestoInicial > presupuesto) ? \"success\" : \"danger\"} >L{presupuesto}</Text>\r\n                </Col>\r\n                <Col span={4} offset={2} >\r\n                    <Button\r\n                        shape=\"round\"\r\n                        type=\"primary\"\r\n                        icon={<PlusOutlined />}\r\n                        style={{ marginTop: 30 }}\r\n                        onClick={handleAdd}\r\n                    >\r\n                        Agregar\r\n                    </Button>\r\n                </Col>\r\n                <Divider />\r\n            </Row>\r\n            <Progress\r\n                percent={percent}\r\n                strokeColor=\"#091D36\"\r\n                showInfo={true}\r\n            />\r\n            <EditableTable />\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button, Form, Input, InputNumber, Modal, Typography } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModal } from '../../actions/ui';\r\nimport { SaveOutlined } from '@ant-design/icons'\r\nimport { startAddNewProject } from '../../actions/proyecto';\r\nconst { Title } = Typography;\r\n\r\nexport const ModalAdd = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCancel = () => {\r\n        dispatch(closeModal());\r\n    };\r\n    const handleAdd = (values) => {\r\n        const { title, presupuestoInicial } = values\r\n        dispatch(startAddNewProject(title, presupuestoInicial));\r\n        dispatch(closeModal());\r\n    }\r\n    return (\r\n        <Modal\r\n            title={<Title\r\n                align=\"center\"\r\n                level={3}\r\n            >\r\n                Nuevo Proyecto\r\n                    </Title>}\r\n            visible={modalOpen}\r\n            onOk={handleAdd}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}\r\n            footer={[\r\n                <Button\r\n                    form=\"addForm\"\r\n                    type=\"primary\"\r\n                    key=\"submit\"\r\n                    shape=\"round\"\r\n                    icon={<SaveOutlined />}\r\n                    htmlType=\"submit\"\r\n                >\r\n                    Guardar\r\n                          </Button>\r\n            ]}\r\n        >\r\n            <Form\r\n                id=\"addForm\"\r\n                onFinish={handleAdd}\r\n            >\r\n                <Form.Item\r\n                    label=\"Nombre del projecto\"\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un nombre Valido!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Presupuesto Establecido\"\r\n                    name=\"presupuestoInicial\"\r\n                    rules={[{\r\n                        required: true,\r\n                        type: 'number',\r\n                        min: 1,\r\n                        message: 'Ingrese un numero mayor que 0'\r\n                    }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n\r\n\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","\r\nimport { Button, Form, Input, InputNumber, Modal, Typography } from 'antd'\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SaveOutlined } from '@ant-design/icons'\r\nimport { startEditingProject } from '../../actions/proyecto';\r\nimport { closeModalEdit } from '../../actions/ui';\r\n\r\nconst { Title } = Typography;\r\nexport const ModalEdit = () => {\r\n\r\n    const { modalEditOpen } = useSelector(state => state.ui);\r\n    const { activeProject } = useSelector(state => state.proyecto);\r\n    const dispatch = useDispatch();\r\n\r\n    const { id, title, presupuestoInicial, total } = activeProject;\r\n\r\n\r\n    const handleCancel = () => {\r\n        dispatch(closeModalEdit());\r\n    };\r\n\r\n    const handleEdit = (values) => {\r\n        const newProject = {\r\n            title: values.title,\r\n            presupuestoInicial: values.presupuestoInicial,\r\n            total\r\n        }\r\n        console.log(newProject);\r\n        dispatch(startEditingProject(id, newProject))\r\n        dispatch(closeModalEdit());\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={\r\n                <Title align=\"center\" level={3}> Editar Proyecto </Title>\r\n            }\r\n            visible={modalEditOpen}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}\r\n            footer={[\r\n                <Button\r\n                    form=\"editForm\"\r\n                    shape=\"round\"\r\n                    type=\"primary\"\r\n                    key=\"submit\"\r\n                    icon={<SaveOutlined />}\r\n                    htmlType=\"submit\"\r\n                >\r\n                    Guardar\r\n                          </Button>\r\n            ]}\r\n        >\r\n            <Form\r\n                id=\"editForm\"\r\n                onFinish={handleEdit}\r\n                initialValues={{\r\n                    title,\r\n                    presupuestoInicial\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    label=\"Nombre del projecto\"\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese un nombre Valido!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Presupuesto Establecido\"\r\n                    name=\"presupuestoInicial\"\r\n                    rules={[{\r\n                        required: true,\r\n                        type: 'number',\r\n                        min: 1,\r\n                        message: 'Ingrese un numero mayor que 0'\r\n                    }]}\r\n                >\r\n                    <InputNumber />\r\n                </Form.Item>\r\n\r\n\r\n            </Form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import { DeleteFilled, DollarCircleFilled, EditFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Col, Divider, List, Popconfirm, Popover, Row, Skeleton, Statistic, Typography } from 'antd'\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { cleanItems, startLoadingItems } from '../actions/item';\r\nimport { setActiveProject, startDeleteProject } from '../actions/proyecto';\r\nimport { hideMenu, openModal, openModalEdit } from '../actions/ui';\r\nimport { ModalAdd } from '../components/modal/ModalAdd';\r\nimport { ModalEdit } from '../components/modal/ModalEdit';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Proyecto = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { projects } = useSelector(state => state.proyecto)\r\n    const { loadingTable } = useSelector(state => state.ui)\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        dispatch(hideMenu())\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(cleanItems());\r\n    }, [dispatch])\r\n\r\n    // Manejo de Botones \r\n    const showModal = () => {\r\n        dispatch(openModal())\r\n    }\r\n    const handleEdit = (id, project) => {\r\n        dispatch(setActiveProject(id, project));\r\n        dispatch(openModalEdit());\r\n\r\n    }\r\n    const handleDelete = (id) => {\r\n        dispatch(startDeleteProject(id));\r\n    }\r\n    const handleBudget = (id, project) => {\r\n        dispatch(startLoadingItems(id));\r\n        dispatch(setActiveProject(id, project));\r\n        history.push(`/presupuesto/${id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={18}>\r\n                    <Title>\r\n                        Proyectos\r\n                    </Title>\r\n\r\n                </Col>\r\n                <Col span={4} offset={2} >\r\n                    <Button\r\n                        shape=\"round\"\r\n                        onClick={showModal}\r\n                        icon={<PlusOutlined />}\r\n                        style={{\r\n                            backgroundColor: '#1890FF',\r\n                            color: 'white',\r\n                            marginTop: 20\r\n                        }}\r\n                    // onClick={handleAdd}\r\n                    >\r\n                        Nuevo Proyecto\r\n                    </Button>\r\n                </Col>\r\n                <Divider />\r\n                <ModalAdd />\r\n            </Row>\r\n\r\n            <List\r\n                className=\"demo-loadmore-list\"\r\n                loading={loadingTable}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={projects}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={[\r\n                            <Popover content=\"Presupuesto\">\r\n                                <Button\r\n                                    shape=\"circle\"\r\n                                    onClick={() => handleBudget(item.id, item)}\r\n                                    icon={<DollarCircleFilled style={{ color: 'white' }} />}\r\n                                    style={{ backgroundColor: '#091D36' }}\r\n                                />\r\n                            </Popover>,\r\n                            <Popover content=\"Editar\">\r\n                                <Button\r\n                                    shape=\"circle\"\r\n                                    onClick={() => handleEdit(item.id, item)}\r\n                                    icon={<EditFilled />}\r\n                                    style={{\r\n                                        backgroundColor: '#5E83BA',\r\n                                        color: 'white'\r\n                                    }}\r\n                                />\r\n                            </Popover>,\r\n                            <Popover content=\"Eliminar\">\r\n                                <Popconfirm\r\n                                    title=\"Esta seguro que desea Eliminar el proyecto?\"\r\n                                    onConfirm={() => handleDelete(item.id)}\r\n                                >\r\n\r\n                                    <Button\r\n                                        shape=\"circle\"\r\n                                        type=\"danger\"\r\n                                        style={{ backgroundColor: '#CA2637' }}\r\n                                        icon={<DeleteFilled />}\r\n                                    />\r\n                                </Popconfirm>\r\n                            </Popover>,\r\n                        ]}\r\n\r\n                    >\r\n                        <Skeleton\r\n                            title={false}\r\n                            loading={loadingTable}\r\n                            active\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={item.title}\r\n                                description={\r\n                                    <Statistic\r\n                                        value={item.presupuestoInicial}\r\n                                        valueStyle={{ color: '#3f8600' }}\r\n                                        suffix=\"L\"\r\n                                    />\r\n                                }\r\n                            />\r\n\r\n                        </Skeleton>\r\n                    </List.Item>\r\n                )\r\n                }\r\n            />\r\n            <ModalEdit />\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { cleanLogout } from './proyecto';\r\nimport { cleanItems } from './item';\r\n\r\nexport const startGoogleLogin = () => {\r\n\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const userGoogle = await firebase.auth().signInWithPopup(googleAuthProvider);\r\n            const { user } = userGoogle;\r\n            dispatch(login(user.uid, user.displayName));\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, name) => ({\r\n    type: types.authLogin,\r\n    payload: {\r\n        uid,\r\n        name\r\n    }\r\n});\r\n\r\nexport const startRegisterUser = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(login(user.uid, user.displayName));\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const startLoginWithEmailAndPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            }).catch(e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n                dispatch(finishLoading());\r\n            });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n\r\n        await firebase.auth().signOut();\r\n        dispatch(cleanItems());\r\n        dispatch(cleanLogout());\r\n        dispatch(logOut());\r\n\r\n    }\r\n}\r\n\r\nconst logOut = () => ({ type: types.authLogout });","import React from 'react';\r\nimport { Button, Layout, Menu, PageHeader } from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n    ProfileOutlined,\r\n    LogoutOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { Ingresar } from '../pages/Ingresar';\r\nimport { Cola } from '../pages/Cola';\r\nimport { CrearTicket } from '../pages/CrearTicket';\r\nimport { Escritorio } from '../pages/Escritorio';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Presupuesto } from '../pages/Presupuesto';\r\nimport { Proyecto } from '../pages/Proyecto';\r\nimport { Header } from 'antd/lib/layout/layout';\r\nimport { startLogout } from '../actions/auth';\r\n\r\nconst { Sider, Content } = Layout;\r\nconst { Item } = Menu;\r\n\r\nexport const RouterPage = () => {\r\n\r\n\r\n    const { menuOpen } = useSelector(state => state.ui);\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    const regresar = () => {\r\n        history.goBack();\r\n    }\r\n    return (\r\n\r\n\r\n\r\n        <Layout style={{ height: '100vh' }}>\r\n            <Sider\r\n                collapsedWidth=\"0\"\r\n                breakpoint=\"md\"\r\n                hidden={menuOpen}\r\n\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={['1']}\r\n                // selectedKeys={['1']}\r\n                >\r\n                    <Item key=\"1\" icon={<ProfileOutlined />}>\r\n                        <Link to=\"/proyecto\">\r\n                            Proyectos\r\n                            </Link>\r\n                    </Item>\r\n                    <Item\r\n                        key=\"2\"\r\n                        icon={<UserOutlined />}>\r\n                        <Link to=\"/ingresar\">\r\n                            Ingresar\r\n                            </Link>\r\n                    </Item>\r\n                    <Item key=\"3\" icon={<VideoCameraOutlined />}>\r\n                        <Link to=\"/cola\">\r\n                            Cola\r\n                            </Link>\r\n                    </Item>\r\n                    <Item key=\"4\" icon={<UploadOutlined />}>\r\n                        <Link to=\"/crear\">\r\n                            Crear Ticket\r\n                            </Link>\r\n                    </Item>\r\n\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n                {/* Header */}\r\n                <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n                    <PageHeader\r\n                        title={name}\r\n                        className=\"site-page-header\"\r\n                        onBack={() => regresar()}\r\n                        extra={[\r\n                            <Button\r\n                                key=\"1\"\r\n                                type=\"danger\"\r\n                                shape=\"round\"\r\n\r\n                                style={{\r\n                                    backgroundColor: '#CA2637',\r\n                                    color: 'white',\r\n                                }}\r\n                                onClick={handleLogOut}\r\n                                icon={<LogoutOutlined />}\r\n\r\n                            > Salir</Button>\r\n                        ]}\r\n\r\n                    />\r\n                </Header>\r\n                {/* Fin Header */}\r\n\r\n                <Content\r\n                    className=\"site-layout-background\"\r\n                    style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        minHeight: 280,\r\n                        overflow: 'auto'\r\n                    }}\r\n                >\r\n                    <Switch>\r\n                        <Route exact path=\"/ingresar\" component={Ingresar} />\r\n                        <Route exact path=\"/cola\" component={Cola} />\r\n                        <Route exact path=\"/crear\" component={CrearTicket} />\r\n                        <Route exact path=\"/presupuesto/:id\" component={Presupuesto} />\r\n                        <Route exact path=\"/proyecto\" component={Proyecto} />\r\n                        <Route exact path=\"/escritorio\" component={Escritorio} />\r\n                        <Redirect to=\"/proyecto\" />\r\n                    </Switch>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, Form, Row, Input, Button, Card } from 'antd';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n// import { hideMenu } from '../../actions/ui';\r\nimport { GoogleOutlined } from '@ant-design/icons';\r\nimport { startGoogleLogin, startLoginWithEmailAndPassword } from '../../actions/auth';\r\nimport { Link } from 'react-router-dom';\r\n// const { Title } = Typography;\r\n\r\nconst layout = {\r\n    labelCol: { span: 10 },\r\n    wrapperCol: { span: 14 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 5, span: 16 },\r\n};\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onFinish = ({ email, password }) => {\r\n        dispatch(startLoginWithEmailAndPassword(email, password));\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const loginGoogle = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"site-card-border-less-wrapper\" style={{ height: '100vh' }}  >\r\n            <Row justify=\"center\">\r\n                <Col span={10}>\r\n                    <Card title=\"Bienvenido\" bordered={false} style={{\r\n                        textAlign: 'center', marginTop: 150, marginRight: 15,\r\n                        borderRadius: 5\r\n                    }} >\r\n                        <Form\r\n                            {...layout}\r\n                            name=\"basic\"\r\n                            initialValues={{ remember: true }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Correo Electronico\"\r\n                                name=\"email\"\r\n                                rules={[{ required: true, type: 'email', message: 'Por Favor ingrese un Email valido!' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: 'Por favor ingrese su contraseña!' }]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...tailLayout}   >\r\n                                <Col span={24}>\r\n                                    <Button\r\n                                        shape=\"round\"\r\n                                        htmlType=\"submit\"\r\n                                        style={{\r\n                                            backgroundColor: '#3A4E7A',\r\n                                            color: 'white'\r\n                                        }} block >\r\n                                        Ingresar\r\n                                    </Button>\r\n                                </Col>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item {...tailLayout}  >\r\n                                <Col md={{ span: 24 }} lg={{ span: 24 }}  >\r\n                                    <Button\r\n                                        type=\"ghost\"\r\n                                        shape=\"round\"\r\n                                        onClick={loginGoogle}\r\n                                        icon={<GoogleOutlined />}\r\n                                        block\r\n                                    >\r\n                                        Login con Google\r\n                                </Button>\r\n                                </Col>\r\n                            </Form.Item>\r\n                            <Form.Item {...tailLayout}  >\r\n                                <Col md={{ pull: 4 }} lg={{ span: 12, push: 5 }}  >\r\n                                    <Link to=\"/auth/register\">\r\n                                        Crea una cuenta\r\n                                    </Link>\r\n                                </Col>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { Button, Card, Col, Form, Input, Row } from 'antd'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startRegisterUser } from '../../actions/auth';\r\n\r\nconst layout = {\r\n    labelCol: { span: 11 },\r\n    wrapperCol: { span: 13 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 5, span: 16 },\r\n};\r\n\r\nexport const RegisterPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinish = ({ email, password, name }) => {\r\n\r\n        dispatch(startRegisterUser(email, password, name))\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        // console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n\r\n        <div className=\"site-card-border-less-wrapper\" style={{ height: '100vh' }}  >\r\n            <Row justify=\"center\">\r\n                <Col span={10}>\r\n                    <Card\r\n                        title=\"Registrarse\"\r\n                        bordered={false}\r\n                        style={{\r\n                            textAlign: 'center',\r\n                            marginTop: 150,\r\n                            marginRight: 15,\r\n                            borderRadius: 10\r\n                        }} >\r\n                        <Form\r\n                            {...layout}\r\n                            name=\"basic\"\r\n                            initialValues={{ remember: true }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"Nombre\"\r\n                                name=\"name\"\r\n                                rules={[{ required: true, message: 'Por Favor ingrese su nombre!' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"Correo Electronico\"\r\n                                name=\"email\"\r\n                                rules={[{ required: true, type: 'email', message: 'Por Favor ingrese un Email valido!' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Contraseña\"\r\n                                name=\"password\"\r\n                                rules={[{\r\n                                    required: true,\r\n                                    message: 'Por favor ingrese una contraseña mayor a 6 caracteres!',\r\n                                    min: 6\r\n                                }]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"Confirmar Contraseña\"\r\n                                name=\"password2\"\r\n                                rules={[{\r\n                                    required: true,\r\n                                    message: 'Por favor confirme su contraseña!',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('Las contraseñas no coinciden')\r\n                                    }\r\n                                })\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item {...tailLayout}   >\r\n                                <Col span={24}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" block >\r\n                                        Registrarse\r\n                                    </Button>\r\n                                </Col>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item {...tailLayout}  >\r\n                                <Col md={{ pul: 4 }} lg={{ span: 16, push: 4 }} >\r\n                                    <Link to=\"/auth/login\">\r\n                                        Ya tiene una cuenta?\r\n                                    </Link>\r\n                                </Col>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginPage } from '../pages/auth/LoginPage'\r\nimport { RegisterPage } from '../pages/auth/RegisterPage'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div >\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginPage} />\r\n                <Route exact path=\"/auth/register\" component={RegisterPage} />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (isLoggedIn)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/auth/login\" />\r\n            )\r\n            }\r\n\r\n        >\r\n\r\n        </Route>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (\r\n                (!isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/proyecto\" />)\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { RouterPage } from './RouterPage';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { login } from '../actions/auth'\r\nimport { startLoadingProjects } from '../actions/proyecto';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { Row, Spin } from 'antd';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(startLoadingProjects());\r\n                setIsLoggedIn(true)\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n\r\n    if (checking) {\r\n        return <Row justify=\"center\"> <Spin style={{ marginTop: 200 }} size=\"large\" /> </Row>\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isLoggedIn={isLoggedIn}\r\n                    />\r\n                    <PrivateRoute\r\n                        path=\"/\"\r\n                        component={RouterPage}\r\n                        isLoggedIn={isLoggedIn}\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                uid: action.payload.uid,\r\n                name: action.payload.name\r\n            };\r\n        case types.authLogout:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    total: 0\r\n}\r\n\r\nexport const presupuestoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.itemLoad:\r\n            return {\r\n                ...state,\r\n                items: [...action.payload]\r\n            }\r\n\r\n        case types.itemLoadTotal:\r\n            return {\r\n                ...state,\r\n                total: action.payload\r\n            }\r\n\r\n        case types.itemAdd:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n        case types.itemEditItem:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(\r\n                    item => item.key === action.payload.key\r\n                        ? action.payload\r\n                        : item\r\n                )\r\n            }\r\n\r\n        case types.itemDelete:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item.key !== action.payload)\r\n            }\r\n\r\n        case types.itemClean:\r\n            return initialState\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    activeProject: {}\r\n}\r\n\r\nexport const proyectoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.proyectoAdd:\r\n            return {\r\n                ...state,\r\n                projects: [action.payload, ...state.projects]\r\n            };\r\n        case types.proyectoLoad:\r\n            return {\r\n                ...state,\r\n                projects: [...action.payload]\r\n            };\r\n\r\n        case types.setActiveProject:\r\n            return {\r\n                ...state,\r\n                activeProject: { ...action.payload }\r\n            }\r\n\r\n        case types.proyectoDelete:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(p => p.id !== action.payload)\r\n            }\r\n        case types.proyectoCleanLogOut:\r\n            return initialState\r\n\r\n        case types.proyectoEdit:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(p =>\r\n                    p.id === action.payload.id\r\n                        ? action.payload.project\r\n                        : p\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    menuOpen: false,\r\n    modalOpen: false,\r\n    modalEditOpen: false,\r\n    loading: false,\r\n    loadingTable: false\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiHideMenu:\r\n            return {\r\n                ...state,\r\n                menuOpen: true\r\n            }\r\n        case types.uiShowMenu:\r\n            return {\r\n                ...state,\r\n                menuOpen: false\r\n            }\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        case types.uiOpenModalEdit:\r\n            return {\r\n                ...state,\r\n                modalEditOpen: true\r\n            }\r\n        case types.uiCloseModalEdit:\r\n            return {\r\n                ...state,\r\n                modalEditOpen: false\r\n            }\r\n        case types.startLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.finishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case types.uiStartLoadingTable:\r\n            return {\r\n                ...state,\r\n                loadingTable: true\r\n            }\r\n        case types.uiFinishLoadingTable:\r\n            return {\r\n                ...state,\r\n                loadingTable: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { presupuestoReducer } from \"./presupuestoReducer\";\r\nimport { proyectoReducer } from \"./proyectoReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    presupuesto: presupuestoReducer,\r\n    proyecto: proyectoReducer\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react'\r\n// import { UiProvider } from './context/UiContext';\r\nimport { Provider } from 'react-redux'\r\n// import { RouterPage } from './pages/RouterPage';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const TicketApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\n// <UiProvider>\r\n        //     <RouterPage />\r\n        // </UiProvider>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TicketApp } from './TicketApp';\n\n\nReactDOM.render(\n\n  <TicketApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}